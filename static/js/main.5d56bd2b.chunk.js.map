{"version":3,"sources":["components/common/ToggleProp/ToggleProp.module.css","components/Login/Login.module.css","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/common/ToggleProp/ToggleProp.jsx","components/Main/TasksList/TasksList.jsx","api/api.js","reducers/tasksReducer.js","components/Main/TasksList/TasksListContainer.jsx","components/Main/AddTask/AddTask.jsx","components/Main/AddTask/AddTaskContainer.jsx","components/Main/Main.jsx","components/ArchivedTasks/ArchivedTasks.jsx","components/ImportantTasks/ImportantTasks.jsx","components/Login/Login.jsx","reducers/usersReducer.js","components/Login/LoginContainer.jsx","App.js","serviceWorker.js","reducers/index.js","index.js","components/Main/AddTask/AddTask.module.css","components/ImportantTasks/ImportantTasks.module.css","components/Main/TasksList/TasksList.module.css","components/ArchivedTasks/ArchivedTasks.module.css","components/Header/Header.module.css","components/Navbar/Navbar.module.css"],"names":["module","exports","Header","props","useEffect","setTasks","className","styles","headerBlock","logo","to","isAuth","fullName","changeTheme","Navbar","navbarBlock","navbarBlock__link","ToggleProp","toggleBlock","type","checked","task","isImportant","onChange","id","bool","addToImportant","userId","isArchived","addToArchive","TasksList","currentInputValue","tasksListBlock","tasks","filter","f","map","t","key","valueBlock","task__descr","value","description","e","target","onBlur","taskId","editTask","setState","editMode","disabled","btnBlock","onClick","removeTask","instance","axios","baseURL","headers","tasksApi","get","data","post","patch","delete","usersApi","params","newName","newPassword","initialState","dispatch","then","res","TasksListContainer","this","React","Component","connect","state","tasksData","usersData","reduxForm","form","addTaskBlock","onSubmit","handleSubmit","formData","taskData","taskDescr","addNewTask","addtTaskForm","Field","inputTask","component","name","placeholder","error","wrongData","addBtn","AddTaskContainer","Main","MainBlock","ArchivedTasks","archivedTasksBlock","ImportantTasks","importantTasksBlock","editInputValue","LoginPage","useState","isLogin","setLogin","loginPage","login","Register","register","LogOrChange","Login","loginBlock","input","registerBlock","setAuthUserData","userData","LoginContainer","r","status","stopSubmit","_error","alert","length","password","logout","undefined","App","exact","path","render","Boolean","window","location","hostname","match","combineReducers","formReducer","action","newTask","importantTasks","importantTask","archivedTasks","archivedTask","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5d56bd2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggleBlock\":\"ToggleProp_toggleBlock__TyMf5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__13-VR\",\"LogOrChange\":\"Login_LogOrChange__23P5k\",\"form\":\"Login_form__xuFL8\",\"input\":\"Login_input__1jEsU\",\"wrongData\":\"Login_wrongData__3bnxt\"};","import React, { useEffect } from 'react';\r\nimport styles from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    useEffect(() => {\r\n        // if(props.isAuth){\r\n            props.setTasks(4)\r\n        // }\r\n    })\r\n    return(\r\n        <div className={styles.headerBlock}>\r\n            <div className={styles.logo}>\r\n                <NavLink to='/' className={styles.logo}>Todo List</NavLink> \r\n            </div>\r\n            {props.isAuth\r\n                ? <p>{ props.fullName }</p>\r\n                : <button className={styles.changeTheme}>Change</button>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react'; \r\nimport styles from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = (props) => {\r\n    return(\r\n        <div className={styles.navbarBlock}>\r\n            <NavLink className={styles.navbarBlock__link} to='/importantTasks'>Important</NavLink>\r\n            <NavLink className={styles.navbarBlock__link} to='/archivedTasks'>Archive</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styles from './ToggleProp.module.css'\r\n\r\nconst ToggleProp = (props) => { \r\n    let toggleImportant = (id, bool) => {\r\n        props.addToImportant(props.userId, id, bool) \r\n    }\r\n\r\n    let toggleArchive = (id, bool) => {\r\n        props.addToArchive(props.userId, id, bool) \r\n    }\r\n    return (\r\n        <div className={styles.toggleBlock}>\r\n            <label>\r\n                <input type=\"checkbox\" checked={props.task.isImportant} onChange={() => toggleImportant(props.task.id, !props.task.isImportant)} />\r\n                <span>IMPORTANT</span>\r\n            </label>\r\n            \r\n            <label>\r\n                <input type=\"checkbox\" checked={props.task.isArchived} onChange={() => toggleArchive(props.task.id, !props.task.isArchived)} />\r\n                <span>ARCHIVED</span>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToggleProp;","import React from 'react';\r\nimport styles from './TasksList.module.css'; \r\nimport ToggleProp from '../../common/ToggleProp/ToggleProp';\r\n\r\nconst TasksList = (props) => {   \r\n    let currentInputValue = '';\r\n    const editInputValue = (taskId) => {\r\n        props.editTask(props.userId, taskId, currentInputValue)\r\n    }\r\n    return(\r\n        <div className={styles.tasksListBlock}>\r\n            {props.tasks\r\n                    .filter(f => !f.isArchived )\r\n                    .map(t => (\r\n                        <div className={styles.task} key={ t.id } >\r\n                            <div className={styles.valueBlock} >\r\n                                <input type=\"text\" \r\n                                    className={ styles.task__descr } \r\n                                    value={ t.description }  \r\n                                    onChange={ (e) => { currentInputValue = e.target.value } } \r\n                                    onBlur={ () => { editInputValue(t.id); this.setState({ editMode: false }) } }\r\n                                disabled /> \r\n\r\n                                <ToggleProp { ...props } task={ t } />\r\n                            </div>\r\n                            \r\n                            <div className={ styles.btnBlock }>\r\n                                <button onClick={ () => this.setState({ editMode: true }) }>EDIT</button>\r\n                                <button onClick={ () => props.removeTask(t.id, props.userId) } >REMOVE</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksList;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:8000/',\r\n    headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n    }\r\n})\r\n\r\n\r\nexport const tasksApi = {\r\n    getTasks(userId) { \r\n        return instance.get(`tasks?userId=${userId}`)\r\n    },\r\n    addTask(data) {\r\n        return instance.post(`tasks?userId=${data.userId}`, {\r\n            \"description\": data.description,\r\n            \"isImportant\": data.isImportant,\r\n            \"isArchived\": data.isArchived, \r\n            \"userId\": data.userId\r\n        })\r\n    },\r\n    addToImportant(taskId, bool){ \r\n        return instance.patch(`tasks/${taskId}`, {\r\n            \"isImportant\": bool\r\n        })\r\n    },\r\n    addToArchive(taskId, bool){\r\n        return instance.patch(`tasks/${taskId}`, {\r\n            \"isArchived\": bool\r\n        })\r\n    },\r\n    editTask(taskId, value){\r\n        return instance.patch(`tasks/${taskId}`, {\r\n            \"description\": value\r\n        })\r\n    },\r\n    removeTask(taskId){\r\n        return instance.delete(`tasks/${taskId}`)\r\n    }\r\n}\r\n\r\n\r\nexport const usersApi = {\r\n    checkUser(fullName) {\r\n        return instance.get(`users`, { params: { 'fullName': fullName } })\r\n    }, \r\n    register(data){\r\n        return instance.post(`users`, {\r\n            \"fullName\": data.newName,\r\n            \"password\": data.newPassword \r\n        })\r\n    },\r\n    login(userId){\r\n        return instance.get(`users?id=${userId}`)\r\n    }\r\n}\r\n","import { tasksApi } from \"../api/api\"\r\n\r\nlet initialState = {\r\n    tasks: []\r\n}\r\n\r\nexport const tasksReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'SET_TASKS': \r\n            return {\r\n                ...state,\r\n                tasks: [...action.tasks]\r\n            } \r\n        case 'ADD_NEW_TASK': {\r\n            let newTask = {\r\n                ...action.task\r\n            }\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks, newTask]    // либо можно этот кейс удалить и при создании нового таска перевызвать SET_TASKS\r\n            } \r\n        }\r\n        case 'ADD_TO_IMPORTANT': \r\n            return{\r\n                ...state,\r\n                importantTasks: [...state.importantTasks, action.importantTask]\r\n            }\r\n        case 'ADD_TO_ARCHIVE': \r\n            return{\r\n                ...state,\r\n                archivedTasks: [...state.archivedTasks, action.archivedTask]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n// Actions\r\n\r\nexport const setTasksSuccess = (tasks) => ({\r\n    type: 'SET_TASKS',\r\n    tasks\r\n})\r\n\r\nexport const addNewTaskSuccess = (task) => ({\r\n    type: 'ADD_NEW_TASK',\r\n    task\r\n})\r\n\r\n// export const addToImportantSuccess = (importantTask) => ({\r\n//     type: 'ADD_TO_IMPORTANT',\r\n//     importantTask\r\n// })\r\n\r\n// export const addToArchiveSuccess = (archivedTask) => ({\r\n//     type: 'ADD_TO_ARCHIVE',\r\n//     archivedTask\r\n// })\r\n\r\n\r\n// Thunks\r\n\r\nexport const setTasks = (userId) => (dispatch) => {\r\n    tasksApi.getTasks(userId)\r\n        .then(res => {  \r\n            dispatch(setTasksSuccess(res.data))\r\n        })\r\n} \r\n\r\nexport const addNewTask = (data) => (dispatch) => {\r\n        tasksApi.addTask(data)\r\n        .then(res => {\r\n            dispatch(addNewTaskSuccess(res.data))\r\n        })\r\n}\r\n\r\nexport const addToImportant = (userId, taskId, bool) => (dispatch) => { \r\n    tasksApi.addToImportant(taskId, bool)\r\n        .then(res => {  \r\n            dispatch(setTasks(userId)) \r\n        })\r\n}\r\n\r\nexport const addToArchive = (userId, taskId, bool) => (dispatch) => {\r\n    tasksApi.addToArchive(taskId, bool)\r\n        .then(res => {\r\n            dispatch(setTasks(userId))\r\n        })\r\n}\r\n\r\nexport const editTask = (userId, taskId, value) => (dispatch) => {\r\n    tasksApi.editTask(taskId, value)\r\n        .then(res => {\r\n            dispatch(setTasks(userId))\r\n        })\r\n}\r\n\r\nexport const removeTask = (taskId, userId) => (dispatch) => {\r\n    tasksApi.removeTask(taskId)\r\n        .then(res => {\r\n            dispatch(setTasks(userId))\r\n        })\r\n}\r\n\r\n","import React from 'react'; \r\nimport TasksList from './TasksList';\r\nimport { connect } from 'react-redux';\r\nimport { addToImportant, addToArchive, removeTask, editTask } from '../../../reducers/tasksReducer';\r\n\r\nclass TasksListContainer extends React.Component {\r\n    render() {\r\n        return <TasksList {...this.props} />\r\n    }\r\n}\r\n\r\nconst mstp = (state) => {\r\n    return ({\r\n        tasks: state.tasksData.tasks,\r\n        userId: state.usersData.id\r\n    })\r\n}\r\n\r\nexport default connect(mstp, { addToImportant, addToArchive, removeTask, editTask })(TasksListContainer);","import React from 'react';\r\nimport styles from './AddTask.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst AddTask = (props) => { \r\n    const submitTask = (formData) => {   \r\n        let taskData = {  \r\n            description: formData.taskDescr,\r\n            isImportant: formData.isImportant,\r\n            isArchived: false,\r\n            userId: props.userId\r\n            // userId: props.userId\r\n        } \r\n        props.addNewTask(taskData) \r\n        formData.taskDescr = ''\r\n        formData.isImportant = false\r\n    }\r\n    return(\r\n        <div className={styles.addTaskBlock}>\r\n            <form onSubmit={props.handleSubmit(submitTask)} className={styles.addtTaskForm}>\r\n                <Field className={styles.inputTask} component='input' name='taskDescr' type='text' placeholder='What Do You Wanna Do?' /> \r\n                <Field className={styles.isImportant} component='input' name='isImportant' type='checkbox' /> \r\n                { props.error && <div className={styles.wrongData}>{ props.error }</div> }\r\n                <button className={styles.addBtn}>Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'addTask'})(AddTask);","import React from 'react'; \r\nimport AddTask from './AddTask';\r\nimport { connect } from 'react-redux';\r\nimport { addNewTask } from '../../../reducers/tasksReducer'\r\n\r\nclass AddTaskContainer extends React.Component {\r\n    render(){\r\n        return <AddTask {...this.props} />\r\n    }\r\n}\r\n\r\nconst mstp = (state) => ({\r\n    tasks: state.tasksData.tasks,\r\n    userId: state.usersData.id\r\n})\r\n\r\nexport default connect(mstp, { addNewTask })(AddTaskContainer);","import React from 'react';\r\nimport styles from './Main.module.css';  \r\nimport TasksListContainer from './TasksList/TasksListContainer';\r\nimport AddTaskContainer from './AddTask/AddTaskContainer'; \r\n\r\n\r\nconst Main = (props) => {\r\n    \r\n    return (\r\n        <div className={styles.MainBlock}>\r\n            <AddTaskContainer />\r\n            <TasksListContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Main;","import React from 'react'; \r\nimport styles from './ArchivedTasks.module.css';\r\nimport { connect } from 'react-redux';\r\nimport ToggleProp from '../common/ToggleProp/ToggleProp';\r\nimport { addToImportant, addToArchive, removeTask } from '../../reducers/tasksReducer';\r\n\r\nclass ArchivedTasks extends React.Component {\r\n    render(){\r\n        return <div className={styles.archivedTasksBlock}>\r\n            { this.props.tasks\r\n                .filter(f => f.isArchived)\r\n                .map(t => (\r\n                        <div className={styles.task} key={t.id}>\r\n                            <div className={ styles.valueBlock }>\r\n                                <input type=\"text\" className={ styles.task__descr } value={ t.description } disabled /> \r\n\r\n                                <ToggleProp {...this.props} task={ t } />\r\n                            </div>\r\n\r\n                            <div className={ styles.btnBlock }>\r\n                                <button onClick={ () => this.setState({ editMode: true }) }>EDIT</button>\r\n                                <button onClick={ () => this.props.removeTask(t.id, this.props.userId) } >REMOVE</button>\r\n                            </div>\r\n                        </div>\r\n                )) \r\n            } \r\n        </div> \r\n    }\r\n}\r\n\r\nlet mstp = (state) => ({\r\n    tasks: state.tasksData.tasks,\r\n    userId: state.usersData.id\r\n})\r\n\r\nexport default connect(mstp, { addToImportant, addToArchive, removeTask })(ArchivedTasks);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './ImportantTasks.module.css'\r\nimport ToggleProp from '../common/ToggleProp/ToggleProp'; \r\nimport { addToImportant, addToArchive, removeTask, editTask } from '../../reducers/tasksReducer';\r\n\r\nclass ImportantTasks extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            editMode: false\r\n        }\r\n    } \r\n    currentInputValue =  '';\r\n    editInputValue(taskId) {\r\n        this.props.editTask(this.props.userId, taskId, this.currentInputValue)\r\n    }\r\n    render() {\r\n        return <div className={ styles.importantTasksBlock }>\r\n            { this.props.tasks\r\n                .filter(f => f.isImportant && !f.isArchived)\r\n                .map(t => (\r\n                        <div className={ styles.task } key={ t.id }>\r\n                            <div className={ styles.valueBlock }>\r\n                                { this.state.editMode\r\n                                    ? <input type=\"text\" \r\n                                        className={ styles.task__descr } \r\n                                        value={ t.description } \r\n                                        onChange={ (e) => { this.currentInputValue = e.target.value } } \r\n                                        onBlur={ () => { this.editInputValue(t.id); this.setState({ editMode: false }) } }/> \r\n\r\n                                    : <input type=\"text\" className={ styles.task__descr } value={ t.description } disabled /> \r\n                                }\r\n                                \r\n\r\n                                <ToggleProp { ...this.props } task={ t } />\r\n                            </div>\r\n                            \r\n                            <div className={ styles.btnBlock }>\r\n                                <button onClick={ () => this.setState({ editMode: true }) }>EDIT</button>\r\n                                <button onClick={ () => this.props.removeTask(t.id, this.props.userId) }>REMOVE</button>\r\n                            </div>\r\n                        </div>\r\n                )) \r\n            } \r\n        </div>\r\n    }\r\n}\r\n\r\nlet mstp = (state) => ({\r\n    tasks: state.tasksData.tasks,\r\n    userId: state.usersData.id\r\n})\r\n\r\nexport default connect(mstp, { addToImportant, addToArchive, removeTask, editTask })(ImportantTasks);","import React, { useState } from 'react';\r\nimport styles from './Login.module.css'\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\n\r\n\r\nconst LoginPage = (props) => {\r\n    const [isLogin, setLogin] = useState(true)\r\n    return(\r\n        <div className={styles.loginPage}>\r\n            { isLogin ? <Login login={props.login} /> : <Register register={props.register} /> } \r\n            <p className={styles.LogOrChange}>or\r\n                { isLogin \r\n                    ? <span onClick={ () => setLogin(false) } > Register</span> \r\n                    : <span onClick={ () => setLogin(true) }> Login</span> \r\n                } \r\n            </p>\r\n        </div>\r\n    )\r\n}\r\nexport default LoginPage;\r\n\r\n\r\nconst LoginForms = (props) => {\r\n\r\n    const goLogin = (formData) => {\r\n        props.login(formData);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.loginBlock}>\r\n            <h2>Login</h2>\r\n            <form onSubmit={ props.handleSubmit(goLogin) } className={styles.form} >\r\n                <Field className={styles.input} component='input' name='fullName' type='text' placeholder='Your Full Name' /> \r\n                <Field className={styles.input} component='input' name='password' type='password' placeholder='Your Password' /> \r\n                <button>Login</button>\r\n                { props.error && <div className={styles.wrongData}>{ props.error }</div> }\r\n            </form> \r\n        </div>\r\n    )\r\n} \r\nconst Login = reduxForm({ form: 'login' })(LoginForms)\r\n\r\n\r\nconst RegisterForms = (props) => {\r\n\r\n    const goRegister = (formData) => {\r\n        props.register(formData);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.registerBlock}>\r\n            <h2>Register</h2>\r\n            <form onSubmit={ props.handleSubmit(goRegister) } className={styles.form} >\r\n                <Field className={styles.input} component='input' name='newName' type='text' placeholder='Full Name' /> \r\n                <Field className={styles.input} component='input' name='newPassword' type='password' placeholder='Password' /> \r\n                <button>Register</button>\r\n                { props.error && <div className={styles.wrongData}>{ props.error }</div> }\r\n            </form>\r\n        </div>\r\n    )\r\n} \r\nconst Register = reduxForm({ form: 'register' })(RegisterForms)","import { stopSubmit } from \"redux-form\";\r\nimport { usersApi } from \"../api/api\";\r\n\r\nlet initialState = { \r\n    isAuth: false\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'SET_AUTH_USER_DATA': \r\n            return {\r\n                ...state,\r\n                ...action.userData,\r\n                isAuth: action.isAuth\r\n            };  \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setAuthUserData = (userData, isAuth) => ({\r\n    type: 'SET_AUTH_USER_DATA',\r\n    userData,\r\n    isAuth\r\n}); \r\n\r\nexport const login = (formData) => (dispatch) => { \r\n    usersApi.checkUser(formData.fullName)\r\n        .then(r => {\r\n            if (r.data.length && formData.password == r.data[0].password) {\r\n                usersApi.login(r.data[0].id)\r\n                    .then(res => { \r\n                        dispatch(setAuthUserData(res.data[0], true)); \r\n                    })\r\n            } else {\r\n                dispatch(stopSubmit('login', { _error: 'Неправильный логин или пароль' })); \r\n            };\r\n        })\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    dispatch(setAuthUserData(undefined, false)); \r\n}\r\n\r\nexport const register = (formData) => (dispatch) => {\r\n    usersApi.checkUser(formData.newName)\r\n        .then(r => {\r\n            if (r.status === 400) {\r\n                dispatch(stopSubmit('register', { _error: 'Такое имя пользователя уже существует' }));\r\n            }\r\n            else {\r\n                usersApi.register(formData)\r\n                    .then(r => {\r\n                        if (r.status === 201) {\r\n                            dispatch(setAuthUserData(r.data, true))  \r\n                        } else {\r\n                            alert('Что-то пошло не так')\r\n                        }\r\n                    })\r\n            }\r\n        })\r\n}\r\n\r\n","import React from 'react';\r\nimport LoginPage from './Login';\r\nimport { connect } from 'react-redux';\r\nimport { register, login, logout } from '../../reducers/usersReducer';\r\n\r\nclass LoginContainer extends React.Component{\r\n    render(){\r\n        return <LoginPage { ...this.props } />\r\n    }\r\n} \r\n\r\nconst mstp = (state) => ({\r\n    userData: state.usersData.userData\r\n})\r\n\r\nexport default connect(mstp, { register, login, logout })(LoginContainer);","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Main from './components/Main/Main'; \nimport { Route } from 'react-router-dom'; \nimport ArchivedTasks from './components/ArchivedTasks/ArchivedTasks';\nimport ImportantTasks from './components/ImportantTasks/ImportantTasks';\nimport { connect } from 'react-redux';\nimport { setTasks } from './reducers/tasksReducer'\nimport LoginContainer from './components/Login/LoginContainer';\n\nclass App extends React.Component {  \n    render(){\n        return (\n            <div className=\"app\" >\n                <Header isAuth={this.props.isAuth} fullName={this.props.fullName}  userId={this.props.userId} setTasks={this.props.setTasks} />\n                {!this.props.isAuth\n                    ? <LoginContainer />\n                    : <>\n                        <Navbar /> \n                        <div className=\"main\" >\n                                <Route exact path='/' render={() => <Main />}/>\n                                <Route path='/importantTasks' render={() => <ImportantTasks />}/>    \n                                <Route path='/archivedTasks' render={() => <ArchivedTasks />}/>    \n                        </div>\n                    </>\n                }\n                \n            </div>\n        );\n    }\n}\n\nconst mstp = (state) => ({ \n    isAuth: state.usersData.isAuth,\n    userId: state.usersData.id,\n    fullName: state.usersData.fullName\n})\n \nexport default connect(mstp, { setTasks })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport { tasksReducer } from \"./tasksReducer\";\r\nimport { usersReducer } from \"./usersReducer\";\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    form: formReducer,\r\n    tasksData: tasksReducer,\r\n    usersData: usersReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, HashRouter } from 'react-router-dom'; \nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\";\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nwindow.store = store;\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App />\n\t\t\t</Provider>\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addTaskBlock\":\"AddTask_addTaskBlock__xgd3Z\",\"addtTaskForm\":\"AddTask_addtTaskForm__2i8hZ\",\"inputTask\":\"AddTask_inputTask__cv9Xp\",\"addBtn\":\"AddTask_addBtn__2fIlw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"importantTasksBlock\":\"ImportantTasks_importantTasksBlock__3e1rh\",\"task\":\"ImportantTasks_task__1bso5\",\"task__descr\":\"ImportantTasks_task__descr__1mTTb\",\"valueBlock\":\"ImportantTasks_valueBlock__1baEd\",\"btnBlock\":\"ImportantTasks_btnBlock__39IG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksListBlock\":\"TasksList_tasksListBlock__j8ERD\",\"task\":\"TasksList_task__3nxez\",\"task__descr\":\"TasksList_task__descr__3rrdu\",\"valueBlock\":\"TasksList_valueBlock__3ES4T\",\"btnBlock\":\"TasksList_btnBlock__LjIXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"archivedTasksBlock\":\"ArchivedTasks_archivedTasksBlock__21BqT\",\"task\":\"ArchivedTasks_task__16Vmq\",\"task__descr\":\"ArchivedTasks_task__descr__3Ax4R\",\"valueBlock\":\"ArchivedTasks_valueBlock__2jMSm\",\"btnBlock\":\"ArchivedTasks_btnBlock__3CV_D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBlock\":\"Header_headerBlock__12bW1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarBlock\":\"Navbar_navbarBlock__3rlp0\",\"navbarBlock__link\":\"Navbar_navbarBlock__link__3ugs4\"};"],"sourceRoot":""}